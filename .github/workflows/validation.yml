name: Validation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  validation:
    name: "CS, ArchSniffer, PHPStan, Security"
    runs-on: ubuntu-18.04
    strategy:
      fail-fast: false
      matrix:
        php-version: [
          '8.1'
        ]

    env:
      APPLICATION_ENV: devtest
      APPLICATION_STORE: DE
      PROJECT: LeanPublisher

    steps:
      - uses: actions/checkout@v2

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.6.0
          port: 10005

      - uses: actions/setup-node@v1
        with:
          node-version: '16'

      - name: NPM cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Composer get cache directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Composer validate
        run: composer validate

      - name: Composer install
        run: |
          composer --version
          composer install
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, pdo_mysql
          tools: composer:v2

      - name: Generate transfer objects
        run: vendor/bin/console transfer:generate

      - name: Generate transfer databuilder objects
        run: vendor/bin/console transfer:databuilder:generate

      - name: Propel install
        run: |
          vendor/bin/console propel:schema:copy
          vendor/bin/console propel:model:build
          vendor/bin/console transfer:entity:generate
      - name: Setup search
        run: vendor/bin/console setup:search

      - name: Codecept build
        run: vendor/bin/codecept build --ansi

      - name: Generate autocompletion files
        run: vendor/bin/console dev:ide-auto-completion:generate

      - name: Generate rest API dcoumentation
        run: vendor/bin/console rest-api:generate:documentation

      - name: Frontend install-dependencies
        run: |
          vendor/bin/console frontend:project:install-dependencies
      - name: Install NPM packages
        run: |
          sudo npm install --location=global --unsafe-perm speccy@0.11.0
      - name: Speccy lint Glue specification
        run: speccy lint src/Generated/Glue/Specification/spryker_rest_api.schema.yml --rules=default

      - name: Style lint
        run: node ./frontend/libs/stylelint

      - name: TS lint
        run: node ./frontend/libs/tslint --format stylish

      - name: Front-end Formatter
        run: node ./frontend/libs/formatter

      - name: Front-end MP Unit Tests
        run: npm run mp:test

      - name: Front-end MP Build
        run: npm run mp:build

      - name: Validate propel files
        run: |
          vendor/bin/console propel:schema:validate
          vendor/bin/console propel:schema:validate-xml-names
      - name: Validate transfer files
        run: vendor/bin/console transfer:validate

      - name: Run CodeStyle checks
        run: vendor/bin/console code:sniff:style

      - name: Run Architecture rules
        run: vendor/bin/phpmd src/ text vendor/spryker/architecture-sniffer/src/ruleset.xml --minimumpriority 2

      - name: Run PHPStan
        run: vendor/bin/phpstan analyze -l 5 -c phpstan.neon src/

      - name: Run Security check
        run: vendor/bin/console security:check
